{"version":3,"sources":["scripts/main.js"],"names":["newField","button","document","querySelector","currentScore","fieldRow","querySelectorAll","messageStart","messageWin","messageLose","size","score","isWinner","gameField","reset","classList","contains","add","render","row","col","item","children","cell","textContent","className","addNewNumber","findEmptyCell","randomColumn","randomRow","Math","random","emptyCells","forEach","rowIndex","columnIndex","push","floor","length","move","e","key","moveLeft","moveRight","moveDown","moveUp","remove","canMove","removeEventListener","checkRows","map","newRow","filter","index","splice","concat","Array","fill","toReverse","toTranspose","_","colIndex","reverse","checkColumns","i","some","j","addEventListener","innerText","replace"],"mappings":"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","file":"main.462d41e2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.button');\nconst currentScore = document.querySelector('.game-score');\nconst fieldRow = document.querySelectorAll('.field-row');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst size = 4;\n\nlet score = 0;\nlet isWinner = false;\nlet newField;\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', e => {\n  document.addEventListener('keydown', move);\n\n  if (button.innerText === 'Start') {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    isWinner = false;\n    reset();\n  }\n\n  addNewNumber();\n  addNewNumber();\n  render();\n});\n\nfunction reset() {\n  score = 0;\n\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  if (!messageLose.classList.contains('hidden')) {\n    messageLose.classList.add('hidden');\n  }\n\n  if (!messageWin.classList.contains('hidden')) {\n    messageWin.classList.add('hidden');\n  }\n};\n\nfunction render() {\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      const item = fieldRow[row].children[col];\n      const cell = gameField[row][col];\n\n      if (cell === 0) {\n        item.textContent = '';\n        item.className = 'field-cell';\n      } else {\n        item.textContent = cell;\n        item.className = `field-cell field-cell--${cell}`;\n      }\n    };\n  };\n\n  currentScore.textContent = score;\n};\n\nfunction addNewNumber() {\n  const [randomColumn, randomRow] = findEmptyCell();\n\n  gameField[randomColumn][randomRow] = Math.random() < 0.9 ? 2 : 4;\n};\n\nfunction findEmptyCell() {\n  const emptyCells = [];\n\n  gameField.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      if (cell === 0) {\n        emptyCells.push([rowIndex, columnIndex]);\n      }\n    });\n  });\n\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n};\n\nfunction move(e) {\n  newField = gameField;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    default:\n      return;\n  }\n\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      if (newField[row][col] !== gameField[row][col]) {\n        gameField = newField;\n        addNewNumber();\n        render();\n      }\n    }\n  }\n\n  if (isWinner) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (!canMove()) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', move);\n  }\n};\n\nfunction moveLeft() {\n  if (!checkRows()) {\n    return;\n  }\n\n  newField = newField.map(row => {\n    const newRow = row.filter(cell => cell !== 0);\n\n    newRow.forEach((cell, index) => {\n      if (cell === newRow[index + 1]) {\n        newRow[index] *= 2;\n        newRow.splice(index + 1, 1);\n        score += newRow[index];\n\n        if (newRow[index] === 2048) {\n          isWinner = true;\n        }\n      }\n    });\n\n    return newRow.concat(Array(size - newRow.length).fill(0));\n  });\n};\n\nfunction moveRight() {\n  if (!checkRows()) {\n    return;\n  }\n\n  toReverse();\n  moveLeft();\n  toReverse();\n};\n\nfunction moveDown() {\n  toTranspose();\n  moveRight();\n  toTranspose();\n};\n\nfunction moveUp() {\n  toTranspose();\n  moveLeft();\n  toTranspose();\n};\n\nfunction toTranspose() {\n  newField = newField[0]\n    .map((_, colIndex) => newField.map(row => row[colIndex]));\n};\n\nfunction toReverse() {\n  newField.forEach(row => row.reverse());\n};\n\nfunction canMove() {\n  if (checkRows()) {\n    return true;\n  }\n\n  toTranspose();\n\n  return checkColumns();\n};\n\nfunction checkRows() {\n  for (let i = 0; i < size; i++) {\n    if (newField[i].some(cell => cell === 0)\n      || newField[i].some((cell, j) => cell === newField[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction checkColumns() {\n  for (let i = 0; i < size; i++) {\n    if (newField[i].some((cell, j) => cell === newField[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n"]}